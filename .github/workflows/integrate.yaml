# reusable workflow triggered by other actions
name: CI

on:
  workflow_call:
    secrets:
      CHARMCRAFT_CREDENTIALS:
        required: true

jobs:
  lib-check:
    name: Check libraries
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/_quality-checks.yaml@main
    secrets: inherit
    with:
        charm-path: "."

  lint:
    name: Lint Check
    runs-on: ubuntu-20.04

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: sudo apt install tox

    - name: Lint code
      run: tox -e lint

  unit:
    name: Unit Test
    runs-on: ubuntu-20.04

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: sudo apt install tox

    - name: Run unit tests
      run: tox -e unit

  terraform-checks:
    name: Terraform
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/terraform-checks.yaml@main
    with:
      charm-path: .
      
  deploy:
    name: Integration tests
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.31-strict/stable
          microk8s-addons: "dns storage rbac metallb:10.64.140.43-10.64.140.49"
          charmcraft-channel: 3.x/stable
          juju-channel: 3.6/stable

      - name: Run test
        run: |
          sudo usermod --append --groups lxd $USER
          sudo apt install -y firefox
          # Requires the model to be called kubeflow due to this bug:
          # https://github.com/kubeflow/kubeflow/issues/6136
          juju add-model kubeflow
          sg snap_microk8s -c "tox -e integration -- --model kubeflow"

      - run: sg snap_microk8s -c "microk8s.kubectl get all -A"
        if: failure()

      - run: sg snap_microk8s -c "microk8s.kubectl get pods -A -oyaml"
        if: failure()

      - run: juju status
        if: failure()

      - name: Get kubeflow-volumes workload logs
        run: sg snap_microk8s -c "microk8s.kubectl logs --tail 100 -nkubeflow -ljuju-app=kubeflow-volumes"
        if: failure()

      - name: Get kubeflow-volumes operator logs
        run: sg snap_microk8s -c "microk8s.kubectl logs --tail 100 -nkubeflow -ljuju-operator=kubeflow-volumes"
        if: failure()

      - name: Generate inspect tarball
        run: >
          sg snap_microk8s <<EOF
            microk8s inspect | \
            grep -Po "Report tarball is at \K.+" | \
            xargs -I {} cp {} inspection-report-${{ strategy.job-index }}.tar.gz
          EOF
        if: failure()

      - name: Upload inspect tarball
        uses: actions/upload-artifact@v3
        with:
          name: inspection-reports
          path: ./inspection-report-${{ strategy.job-index }}.tar.gz
        if: failure()

      - name: Upload selenium screenshots
        uses: actions/upload-artifact@v3
        with:
          name: selenium-screenshots
          path: /tmp/selenium-*.png
        if: failure()

      - name: Upload HAR logs
        uses: actions/upload-artifact@v3
        with:
          name: selenium-har
          path: /tmp/selenium-*.har
        if: failure()
